apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 55.5.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 1m
  values:
    crds:
      enabled: false
    grafana:
      enabled: true
      adminPassword: "admin"  # Change this in the demo overlay
      env:
        GF_SERVER_ROOT_URL: "https://grafana.admin.dev.techbrewhq.com"
        GF_SERVER_DOMAIN: "grafana.admin.dev.techbrewhq.com"
        GF_SERVER_PROTOCOL: "https"
        GF_SERVER_CERT_FILE: "/etc/grafana/certs/tls.crt"
        GF_SERVER_CERT_KEY: "/etc/grafana/certs/tls.key"
        GF_AUTH_DISABLE_LOGIN_FORM: "true"
        GF_AUTH_OAUTH_AUTO_LOGIN: "true"
        GF_AUTH_SIGNOUT_REDIRECT_URL: "https://keycloak.admin.dev.techbrewhq.com/realms/techbrew/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.admin.dev.techbrewhq.com"
      grafana.ini:
        server:
          root_url: "https://grafana.admin.dev.techbrewhq.com"
          domain: "grafana.admin.dev.techbrewhq.com"
          protocol: "https"
          cert_file: "/etc/grafana/certs/tls.crt"
          cert_key: "/etc/grafana/certs/tls.key"
        auth:
          disable_login_form: true
          oauth_auto_login: true
          signout_redirect_url: "https://keycloak.admin.dev.techbrewhq.com/realms/techbrew/protocol/openid-connect/logout?redirect_uri=https%3A%2F%2Fgrafana.admin.dev.techbrewhq.com"
        auth.generic_oauth:
          enabled: true
          name: Keycloak
          allow_sign_up: true
          client_id: grafana
          client_secret: grafana-client-secret-12345
          scopes: "openid email profile"
          auth_url: https://keycloak.admin.dev.techbrewhq.com/realms/techbrew/protocol/openid-connect/auth
          token_url: https://keycloak.admin.dev.techbrewhq.com/realms/techbrew/protocol/openid-connect/token
          api_url: https://keycloak.admin.dev.techbrewhq.com/realms/techbrew/protocol/openid-connect/userinfo
          role_attribute_path: "contains(roles[*], 'grafana-admin') && 'Admin' || contains(roles[*], 'grafana-editor') && 'Editor' || 'Viewer'"
          groups_attribute_path: "groups"
          login_attribute_path: "preferred_username"
          name_attribute_path: "name"
          email_attribute_path: "email"
          tls_skip_verify_insecure: false
      extraVolumes:
        - name: grafana-tls
          secret:
            secretName: grafana-tls
      extraVolumeMounts:
        - name: grafana-tls
          mountPath: /etc/grafana/certs/
      ingress:
        enabled: true
        ingressClassName: "istio"
        hosts:
          - grafana.admin.dev.techbrewhq.com
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt
        tls:
          - hosts:
              - grafana.admin.dev.techbrewhq.com
            secretName: grafana-tls
    prometheus:
      prometheusSpec:
        podMetadata:
          annotations:
            proxy.istio.io/config: |
              proxyMetadata:
                OUTPUT_CERTS: /etc/istio-output-certs
            sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
            traffic.sidecar.istio.io/includeOutboundIPRanges: ""
          labels:
            app: prometheus
        enableFeatures:
          - remote-write-receiver
        additionalConfig:
          scrapeClasses:
            - name: istio-certs
              default: true
              tlsConfig:
                caFile: /etc/prom-certs/root-cert.pem
                certFile: /etc/prom-certs/cert-chain.pem
                keyFile: /etc/prom-certs/key.pem
                insecureSkipVerify: true
        volumeMounts:
          - mountPath: /etc/prom-certs/
            name: istio-certs
        volumes:
          - name: istio-certs
            emptyDir:
              medium: Memory
    prometheusOperator:
      admissionWebhooks:
        patch:
          podAnnotations:
            sidecar.istio.io/inject: "false"
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 128Mi
    alertmanager:
      alertmanagerSpec:
        podMetadata:
          annotations:
            proxy.istio.io/config: |
              proxyMetadata:
                OUTPUT_CERTS: /etc/istio-output-certs
            sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]'
            traffic.sidecar.istio.io/includeOutboundIPRanges: ""
        scheme: "https"
        tlsConfig:
          caFile: /etc/prom-certs/root-cert.pem
          certFile: /etc/prom-certs/cert-chain.pem
          keyFile: /etc/prom-certs/key.pem
          insecureSkipVerify: true
        volumeMounts:
          - mountPath: /etc/prom-certs/
            name: istio-certs
        volumes:
          - name: istio-certs
            emptyDir:
              medium: Memory
 